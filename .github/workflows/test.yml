name: Test

on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        external-gtest: [ YES ]
        os: [ ubuntu-24.04 ]

    runs-on: ${{ matrix.os }}
    name: Build with external_gtest=${{ matrix.external-gtest }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-go@v5
    - name: install deps
      working-directory: ${{runner.workspace}}
      run: |
        # Build deps
        sudo apt update && sudo apt-get install -y cmake libz-dev uuid-dev libcurl4-openssl-dev libcurl4 pkg-config libssl-dev g++ libscitokens-dev libgtest-dev

        # Build our preferred set of patches on xrootd
        git clone --depth=1 --branch v5.8.0-pelican https://github.com/PelicanPlatform/xrootd.git
        mkdir -p xrootd/build/release_dir
        cd xrootd/build
        cmake .. -DCMAKE_INSTALL_PREFIX=$PWD/release_dir
        make -j $(($(nproc) + 2)) install

        # Install the load tester
        go install github.com/bbockelm/go-wrk@92dbe19

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: CMAKE_PREFIX_PATH=$PWD/../xrootd/build/release_dir/lib/cmake/XRootD cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_TESTS=true

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE --parallel $(($(nproc) + 2))

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: XRD_LOGLEVEL=Debug ctest -C $BUILD_TYPE --timeout 60 --verbose
