name: Test

on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        external-gtest: [ YES ]
        os: [ ubuntu-24.04 ]

    runs-on: ${{ matrix.os }}
    name: Build with external_gtest=${{ matrix.external-gtest }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-go@v5
    - name: install deps
      run: |
        # Install xrootd from upstream repo, not from Ubuntu
        sudo curl -L https://xrootd.web.cern.ch/repo/RPM-GPG-KEY.txt -o /etc/apt/trusted.gpg.d/xrootd.asc
        sudo /bin/sh -c 'echo "deb https://xrootd.web.cern.ch/ubuntu noble stable" >> /etc/apt/sources.list.d/xrootd.list'
        sudo apt update && sudo apt-get install -y cmake libcurl4-openssl-dev libcurl4 pkg-config libssl-dev xrootd-server xrootd-client libxrootd-dev libxrootd-server-dev libgtest-dev xrootd-scitokens-plugins

        # Install pelican directly from GH
        curl -sL https://github.com/PelicanPlatform/pelican/releases/download/v7.11.8/pelican_7.11.8-1_amd64.deb > /tmp/pelican_7.11.8-1_amd64.deb && sudo dpkg -i /tmp/pelican_7.11.8-1_amd64.deb

        # Install the load tester
        go install github.com/bbockelm/go-wrk@92dbe19

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_TESTS=true

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE --verbose
